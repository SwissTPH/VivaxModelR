% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalculateFromData.R
\name{simulate_vivax_interventions}
\alias{simulate_vivax_interventions}
\title{Simulate the effect of several interventions}
\usage{
simulate_vivax_interventions(
  df,
  intervention_list,
  f = 1/72,
  gamma = 1/223,
  r = 1/60,
  year = T,
  maxtime = 2000
)
}
\arguments{
\item{df}{a dataframe containing the data, with one column called I containing the proportion
of infectious individuals (I0+Il) at equilibrium, one column called lambda containing the transmission rate,
and one variable called id which identifies uniquely each row in the dataset.
Additional optional variables are: \cr
rho (reporting rate), delta (importation rate) \cr
intervention levels in the past (when lambda was calculated):  alpha.old (effective care), beta.old (proportion of liver stage cure), omega.old (intensity of vector control)
intervention levels in the future (in the simulation):  alpha.new (effective care), beta.new (proportion of liver stage cure), omega.new (intensity of vector control)
In practice, this dataframe can be the output of the function calculate_r0_rc_fromdata}

\item{intervention_list}{a list of intervention objects.}

\item{f}{relapse frequency}

\item{gamma}{liver clearance rate}

\item{r}{blood clearance rate}

\item{year}{if TRUE, aggregates the outputs per year (h would be in cases per person year). if FALSE, returns daily outputs (h would be in cases per person day).}

\item{maxtime}{number of time steps for simulation}
}
\value{
A dataframe with the simulated state variables for each parameter combination in df
}
\description{
Uses the compartmental model to simulate the effect of interventions
}
\details{
An intervention object is named list containing the intervention description. It should have the follwing structure:
list(intervention_name="string", "alpha.new"=NA, "beta.new"=NA, "omega.new"=NA )
where NA can be replaced by scalars or kepts as such.
If alpha.new is not provided in intervention_object it is equal to alpha.
If beta.new is not provided in intervention_object it is equal to beta.
If omega.new is not provided in intervention_object it is equal to omega.
}
\examples{
mydata=data.frame(incidence=c(23,112),lambda=c(0.0063,0.0071),I=c(0.017,0.12),id=c(1,2))
mydata$rho=c(0.18,0.13)
mydata$beta.old=c(0.43,0.42)
mydata$alpha.old=c(0.17, 0.12)
mydata$delta=c(0,0)
mydata$omega.old=c(1,1)
int_0=list(intervention_name="0", "alpha.new"=NA, "beta.new"=NA, "omega.new"=NA )
int_A=list(intervention_name="A", "alpha.new"=NA, "beta.new"=0.6, "omega.new"=NA )
my_intervention_list=list(int_0, int_A)
simulate_vivax_interventions(df=mydata, my_intervention_list)

}
